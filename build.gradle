plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

group = 'com.samjakob'
version = '1.4.0'

project.uri "https://github.com/SamJakob/SpiGUI"

java {
    sourceCompatibility = 21
    targetCompatibility = 21

    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenCentral()

    maven {
        // Sonatype (for bungeecord-chat used by Spigot)
        url = "https://oss.sonatype.org/content/repositories/snapshots/"
    }

    maven {
        // Spigot Nexus
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
}

dependencies {
    // Spigot API
    compileOnly group: 'org.spigotmc', name: 'spigot-api', version: '1.21.1-R0.1-SNAPSHOT'
    testCompileOnly group: 'org.spigotmc', name: 'spigot-api', version: '1.21.1-R0.1-SNAPSHOT'
}

// Builds Spigot runnable plugin from the test package.
// Can be used to demonstrate and test functionality.
tasks.register('testJar', Jar) {
    from sourceSets.main.output.classesDirs
    from sourceSets.test.output.classesDirs
    from('src/test/resources') {
        include '**'
    }

    archiveBaseName.set("SpiGUITest")
}

publishing {
    publications {
        SpiGUI(MavenPublication) {
            from components.java
            
            pom {
                name = "SpiGUI"
                description = "A comprehensive GUI API for Spigot with pages support."
                url = 'https://github.com/SamJakob/SpiGUI'
                packaging = 'jar'

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }

                developers {
                    developer {
                        name = 'SamJakob'
                        email = 'me@samjakob.com'
                        organization = 'SamJakob'
                        organizationUrl = 'https://samjakob.com'
                    }
                }

                scm {
                    connection = 'scm:git:git://github.com/SamJakob/SpiGUI.git'
                    developerConnection = 'scm:git:ssh://github.com:SamJakob/SpiGUI.git'
                    url = 'https://github.com/SamJakob/SpiGUI'
                }
            }
        }
    }

    if (project.hasProperty("ossrhUsername") && project.hasProperty("ossrhPassword")) {
        repositories {
            maven {
                url = version.endsWith('SNAPSHOT')
                        // If the version ends with SNAPSHOT, we're building a snapshot
                        // so deploy to a SNAPSHOT repository.
                        ? 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
                        // Otherwise, deploy to a staging repository.
                        : 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'

                credentials {
                    username = ossrhUsername
                    password = ossrhPassword
                }
            }
        }
    }
}

signing {
    useGpgCmd()
    sign publishing.publications.SpiGUI
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }

    source = sourceSets.main.java.sourceDirectories
    classpath += configurations.compileClasspath

    options.memberLevel = JavadocMemberLevel.PRIVATE
}
